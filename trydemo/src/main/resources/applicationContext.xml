<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context
 						http://www.springframework.org/schema/context/spring-context-3.0.xsd
 						http://www.springframework.org/schema/cache 
           				http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
           				http://www.springframework.org/schema/task
           				http://www.springframework.org/schema/task/spring-task-3.0.xsd		
 						http://www.springframework.org/schema/tx
          				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
 						"
	default-autowire="byName" default-lazy-init="false">


	<bean id="UserEntity" class = "com.vo.UserEntity" scope="singleton"   destroy-method="destroyMethod"  />


	<!-- AOP所在位置必须声明注解开启不然无法捕捉,故这边声明需放在applicationContext.xml内 Begin -->
	<context:annotation-config />

	<!-- 开启注解驱动 用来扫描@Response/@RequestMapping等注解 -->
	<task:annotation-driven />

	<!-- Spring默认不支持@Aspect风格的切面声明，通过如下配置开启@Aspect支持 -->
	<aop:aspectj-autoproxy />

	<!-- 环境配置和war包分离 以外部配置为准,order 值越小，优先级越高 -->
	<context:property-placeholder order="1"
		ignore-resource-not-found="true" ignore-unresolvable="true"
		location="classpath*:db/db.properties" file-encoding="UTF-8" />

	<!-- 加载spring的事务配置 -->
	<import resource="classpath*:**/transaction.xml" />
	
	<!-- 加载mybatis配置 -->
	<import resource="classpath*:**/spring-mybatis.xml" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="${mysql.driverClassName}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<!--连接池启动时的初始值 -->
		<property name="initialSize" value="10" />
		<!--连接池的最大值 -->
		<property name="maxActive" value="100" />
		<!--最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部 分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="50" />
		<!--最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时 来不及申请 -->
		<property name="minIdle" value="10" />
		<!--给出一条简单的sql语句进行验证 -->
		<property name="validationQuery" value="select 1 from dual" />
		<!--在取出连接时进行有效验证 -->
		<property name="testOnBorrow" value="true" />
		<property name="removeAbandonedTimeout" value="120" />
		<property name="removeAbandoned" value="true" />
		<!--#运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务. -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<!--#连接的超时时间，默认为半小时。 -->
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>

</beans>
